<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:jpa="http://www.springframework.org/schema/data/jpa"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context-3.1.xsd
							http://www.springframework.org/schema/tx
							http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
							http://www.springframework.org/schema/data/neo4j
							http://www.springframework.org/schema/data/neo4j/spring-neo4j-2.0.xsd
							http://www.springframework.org/schema/util
							http://www.springframework.org/schema/util/spring-util-3.1.xsd
							http://www.springframework.org/schema/data/jpa
							http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

<!-- 	<bean id="bootstrap" class="com.goldrush.migrations.MigrationBootstrap" init-method="initialize">
		<property name="dataSource" ref="dataSource" />
		<property name="baseDir" value="dbmigrations" />
		<property name="version" value="1.0" />
	</bean> -->
	
	<!-- JSR-303 - BeanValidation 
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    -->

	<!-- enable annotation driven config -->
	<context:annotation-config />
	
	<!-- database solution -->
	
	<!-- transaction management -->
	<tx:annotation-driven />
 	
	<!-- Directory to scan for repository classes -->
	<jpa:repositories base-package="bin.com.monstersoftwarellc.timeease.repository.impl" factory-class="com.monstersoftwarellc.timeease.repository.RepositoryImplFactoryBean"/>
	
 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="url" value="jdbc:derby:timeease_db;create=true" />
	</bean> 
	 
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:timeease_db;CACHE_SIZE=131072" />
	</bean> -->
	
	<!-- jpa properties -->
	<util:map id="jpaMap">
		<!-- need the deploy-on-startup so that the metamodel gets created before first use -->
		<entry key="eclipselink.deploy-on-startup" value="true" /> 
		<!-- we are turning off the shared cache due to the audit implementation - changes made during update do not get cached  
		<entry key="eclipselink.cache.shared.default" value="false" />-->
		<entry key="eclipselink.weaving" value="true" />
		<!-- Solution to auditor date updates making it to cache - eclipselink makes temporal fields immutable 
		<entry key="eclipselink.temporal.mutable" value="true" />-->
		<!-- <entry key="eclipselink.weaving.output.path" value="C:\\weavedClasses"/>
	    <entry key="eclipselink.weaving.overwrite.existing" value="true" />
		<entry key="eclipselink.ddl-generation" value="create-tables" />
		<entry key="eclipselink.ddl-generation.output-mode" value="both" /> 
	    <entry key="eclipselink.logging.level" value="FINEST" /> 
		<entry key="eclipselink.ddl-generation" value="create-tables" />
		<entry key="eclipselink.ddl-generation.output-mode" value="both" /> -->
	</util:map>
	
	<!-- EclipseLink vendor specific configurations  -->
	<bean id="eclipseLinkVendor-Derby" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
			p:showSql="true" 
			p:generateDdl="true"
			p:databasePlatform="org.eclipse.persistence.platform.database.DerbyPlatform"
			p:database="DERBY" />
	
	<!-- EclipseLink vendor specific configurations 
	<bean id="eclipseLinkVendor-H2" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
			p:showSql="false" 
			p:generateDdl="false"
			p:databasePlatform="org.eclipse.persistence.platform.database.H2Platform"
			p:database="H2" />-->
				
	<!--<bean id="eclipseLinkVendor-MySQL" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
				p:showSql="true" 
				p:generateDdl="false"
				p:databasePlatform="org.eclipse.persistence.platform.database.MySQLPlatform"
				p:database="MYSQL"  /> -->	
	
	<context:load-time-weaver weaver-class="org.eclipse.equinox.weaving.springweaver.EquinoxAspectsLoadTimeWeaver" />
				
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"		
			p:dataSource-ref="dataSource"
			p:jpaVendorAdapter-ref="eclipseLinkVendor-Derby"
			p:jpaPropertyMap-ref="jpaMap"
			p:packagesToScan="bin.com.monstersoftwarellc.timeease.model.impl,com.monstersoftwarellc.timeease.model.impl" >	
<!-- 	    <property name="persistenceUnitPostProcessors">
	      <list>
	         <ref bean="bootstrap"/>
	      </list>
	   </property> -->
    </bean>
    
	<!-- transaction management -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
			p:entityManagerFactory-ref="entityManagerFactory" />
	
	<bean id="serviceLocator" factory-method="getCurrentInstance" class="com.monstersoftwarellc.timeease.service.impl.ServiceLocator" />

	<!-- Scans the class path of this application for @Components to deploy as beans. bin is added so it will work in dev problem with Eclipse-->
	<context:component-scan base-package="bin.com.monstersoftwarellc.timeease,com.monstersoftwarellc.timeease" />
	
	<bean id="applicationSettings" 
		  class="com.monstersoftwarellc.timeease.property.IApplicationSettings"
		  factory-bean="settingsService"
		  factory-method="getApplicationSettings" lazy-init="true">
	</bean>
	
</beans>